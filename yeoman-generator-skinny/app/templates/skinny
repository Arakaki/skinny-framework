#!/bin/sh 

sbt_path=`which sbt`
if [ "`which sbt`" == "" ]; then
  brew install sbt
fi

function run_app() {
  sbt "project dev" "~;container:stop;container:start"
}
function clean_build() {
  rm -rf build
  mkdir build
  cp -pr src build/src
  cp -pr build.sbt build/build.sbt
}

command="$1"
if [ $command == "run" ];then
  run_app
elif [ $command == "clean" ];then
  sbt dev/clean
elif [ $command == "update" ];then
  sbt update
elif [ $command == "console" ];then
  sbt dev/console
elif [ $command == "compile" ];then
  sbt dev/compile
elif [ $command == "test" ];then
  sbt dev/test
elif [ $command == "test-only" ];then
  sbt "dev/test-only $2"
elif [ $command == "g" -o $command == "generate" ];then
  type="$2"
  shift
  shift
  if [ $type == "scaffold" ]; then
    command="task/run scaffold $@"
    sbt "${command}"
  elif [ $type == "controller" ]; then
    command="task/run controller $@"
    sbt "${command}"
  elif [ $type == "model" ]; then
    command="task/run model $@"
    sbt "${command}"
  else
    echo "Generator for ${type} not found."
  fi
elif [ $command == "package" ];then
  clean_build
  sbt "task/run assets:precompile" build/package
elif [ $command == "publish" ];then
  clean_build
  sbt "task/run assets:precompile" build/publish
else
  echo ""
  echo "Usage: skinny [COMMAND] [OPTIONS]..."
  echo ""
  echo "  run       : will run Skinny app for local development"
  echo "  clean     : will clear target directory"
  echo "  update    : will update dependencies"
  echo "  console   : will run sbt console"
  echo "  compile   : will compile all the classes"
  echo "  test      : will run all the tests"
  echo "  test-only : will run the specified test"
  echo "  package   : will create *.war file to deploy"
  echo "  publish   : will publish *.war file to repository"
  echo ""
fi


